@*@model PagedList.IPagedList<ANZHFR.Data.Models.Patient>*@
@model IEnumerable<ANZHFR.Data.Models.Patient>
@using PagedList.Mvc;
@using ANZHFR.Web.ExtensionMethods;
@using System.Configuration;

@{
    ViewBag.Title = "Patients not discharged from " + ViewBag.HospitalName;
}

<div class="row">
    <div class="col-md-12">
        @if (!string.IsNullOrEmpty(ViewBag.Message))
        {
            <div class="alert alert-info alert-dismissable">
                <i class="fa fa-info"></i>
                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                @ViewBag.Message
            </div>
        }
        <div class="filter-box">
            @using (Html.BeginForm("", "patient", FormMethod.Get))
            {
                <input placeholder="Name" style="width:250px;" type="text" value="@ViewBag.FilterSearch" name="search" id="search">

                <span>&nbsp;</span><input type="submit" id="search-btn" class="btn-common btn-submit" value="Search">
            }
        </div>
        <div class="buttons-box">
            <input type="button" value="Create" class="btn-common  btn-create" id="add-btn" />
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="box">
            <div class="box-body table-responsive">
                <table id="list" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            @if (ConfigurationManager.AppSettings["Location"] == "Australian")
                            {
                                <th>Medicare</th>
                                <th>MRN/URN</th>
                            }
                            else
                            {
                                <th>National Health Index</th>
                                <th>Event Number</th>
                            }
                            <th>Fracture Side</th>
                            <th class="header-right options-width2">Incomplete Fields</th>
                            <th class="header-right options-width2">Created</th>
                            <th class="header-right options-width2">Updated</th>
                            <th class="header-right options-width2"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <a item-id="@item.ANZHFRID" title="Edit" class="link-edit" href="#">@item.Name @item.Surname</a>
                                </td>
                                <td>
                                    @item.Medicare
                                </td>
                                <td>
                                    @item.MRN
                                </td>
                                <td>
                                    @if (item.FractureSide == "1")
                                    {
                                        @:Left
                                    }
                                    else
                                    {
                                        @:Right
                                    }
                                </td>
                                <td>
                                    @if (@item.Completeness.HasValue)
                                    {
                                        @item.Completeness.Value.ToString("G29")
                                    }
                                    else
                                    {
                                        @:?
                                    }
                                </td>
                                <td>
                                    @if (@item.Created.HasValue)
                                    {
                                        @item.Created.Value.ToString("dd-MMM-yyyy")
                                    }
                                </td>
                                <td>
                                    @if (@item.LastModified.HasValue)
                                    {
                                        @item.LastModified.Value.ToString("dd-MMM-yyyy")
                                    }
                                </td>
                                <td style="text-align:center;">
                                    @*<a item-id="@item.ANZHFRID" title="View" class="link-view" href="#"><i class="fa fa-search"></i></a>*@
                                    <a item-id="@item.ANZHFRID" title="Edit" class="link-edit" href="#"><i class="fa fa-edit"></i></a>
                                    @if (ConfigurationManager.AppSettings["Type"] == "Demo")
                                    {
                                        <a item-id="@item.ANZHFRID" title="Delete" class="link-delete" href="#myModal" data-toggle="modal"><i class="fa fa-times"></i></a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @*@Html.PagedListPager(Model, page => Url.Action("ActivePatients", new { page, search = ViewBag.FilterSearch, returnUrl = "/patient/ActivePatients"}))*@
        </div>
    </div>
</div>

@Html.Partial("_DeleteConfirmation")

@section scripts {

    <script type="text/javascript">

        $(document).ready(function () {
            mytable = LoadTable();
        });

        function LoadTable() {
            $('#list').DataTable({
                "pageLength": 25,
                'order': [[6, 'desc']],
                columnDefs: [
                    { type: 'stringMonthYear', targets: [5, 6] }
                ]
            });
        }

        /**********************************************************************/
        jQuery("#add-btn").on("click", function (event) {
            event.preventDefault();
            var data = { 'page': GetReturnPageNumber(), 'search': jQuery("#search").val() };
            window.location.href = "/patient/create?" + EncodeQueryData(data);
        });

        /**********************************************************************/
        jQuery(".link-view").on("click", function (event) {
            event.preventDefault();
            var data = { 'page': GetReturnPageNumber(), 'search': jQuery("#search").val() };
            window.location.href = "/patient/view/" + jQuery(this).attr("item-id") + "?" + EncodeQueryData(data);
        });

        /**********************************************************************/
        jQuery(".link-edit").on("click", function (event) {
            event.preventDefault();
            var data = { 'page': GetReturnPageNumber(), 'search': jQuery("#search").val(), 'returnUrl': "ActivePatients" };
            window.location.href = "/patient/edit/" + jQuery(this).attr("item-id") + "?" + EncodeQueryData(data);
        });

        /**********************************************************************/
        jQuery(".link-delete").on("click", function (event) {
            event.preventDefault();
            jQuery("#DeleteItemId").val(jQuery(this).attr("item-id"));
        });

        /**********************************************************************/
        jQuery("#con-delete-btn").on("click", function (event) {
            event.preventDefault();
            var data = { 'page': GetReturnPageNumber(true), 'search': jQuery("#search").val() };
            window.location.href = "/patient/delete/" + jQuery("#DeleteItemId").val() + "?" + EncodeQueryData(data);
        });
    </script>
    <script type="text/javascript">
        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "stringMonthYear-pre": function (s) {
                var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

                if (s == '') {
                    s = '01-Jan-1900';
                }

                var dateComponents = s.split("-");

                var year = dateComponents[2];
                var day = dateComponents[0];

                var month = 0;
                for (var i = 0; i < months.length; i++) {
                    if (months[i].toLowerCase() == dateComponents[1].toLowerCase().substring(0, 3)) {
                        month = i;
                        break;
                    }
                }

                return new Date(year, month, day);
            },

            "stringMonthYear-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "stringMonthYear-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });
    </script>
}